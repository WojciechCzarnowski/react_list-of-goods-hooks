{"version":3,"sources":["App.tsx","index.tsx"],"names":["GoodSort","goodsFromServer","App","goods","useState","visible","setVisible","reversed","setReversed","none","sorted","setSorted","name","sort","product1","product2","localeCompare","length","reverse","className","type","onClick","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,eAAAA,I,oBAAAA,M,KAML,IA6FeE,EA7FO,WACpB,IAAIC,EAAK,UAAOF,GAChB,EAA8BG,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAASJ,EAASS,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OAAQD,GACN,KAAKV,EAASY,KACZT,EAAMU,MAAK,SAACC,EAAUC,GAAX,OAAyBD,EAASE,cAAcD,MAC3D,MAEF,KAAKf,EAASiB,OACZd,EAAMU,MAAK,SAACC,EAAUC,GAAX,OAAyBD,EAASG,OAASF,EAASE,UAC/D,MAEF,QACEd,EAAK,YAAOA,GAOhB,OAJII,GACFJ,EAAMe,UAIN,sBAAKC,UAAU,MAAf,UACE,gCACE,wCAEEd,GACA,wBACEc,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMf,GAAW,IAH5B,sBAUHD,GACC,gCACE,gCACE,wBACEc,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMb,GAAaD,IAH9B,qBAQA,wBACEY,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMV,EAAUX,EAASY,OAHpC,0BAQA,wBACEO,UAAU,SACVC,KAAK,SACLC,QAAS,WACPb,GAAY,GACZG,EAAUX,EAASS,OALvB,mBAWA,wBACEU,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMV,EAAUX,EAASiB,SAHpC,+BASF,qBAAKE,UAAU,QAAf,SACE,6BACGhB,EAAMmB,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,iBCpGzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f371bb0d.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum GoodSort {\n  none,\n  name,\n  length,\n}\n\nconst App: React.FC = () => {\n  let goods = [...goodsFromServer];\n  const [visible, setVisible] = useState(false);\n  const [reversed, setReversed] = useState(false);\n  const [sorted, setSorted] = useState(GoodSort.none);\n\n  switch (sorted) {\n    case GoodSort.name:\n      goods.sort((product1, product2) => (product1.localeCompare(product2)));\n      break;\n\n    case GoodSort.length:\n      goods.sort((product1, product2) => (product1.length - product2.length));\n      break;\n\n    default:\n      goods = [...goods];\n  }\n\n  if (reversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Goods</h1>\n\n        {!visible && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setVisible(true)}\n          >\n            Start\n          </button>\n        )}\n      </div>\n\n      {visible && (\n        <div>\n          <div>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setReversed(!reversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSorted(GoodSort.name)}\n            >\n              Sort by name\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setReversed(false);\n                setSorted(GoodSort.none);\n              }}\n            >\n              Reset\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSorted(GoodSort.length)}\n            >\n              Sort by length\n            </button>\n          </div>\n\n          <div className=\"goods\">\n            <ul>\n              {goods.map((product) => (\n                <li key={product}>\n                  {product}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}